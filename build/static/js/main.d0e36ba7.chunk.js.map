{"version":3,"sources":["Component/Activity/ActivityDetails.js","Component/Activity/Activity.js","Component/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["ActivityDetails","_ref","match","useEffect","fetchItem","_useState","useState","_useState2","Object","slicedToArray","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","item","wrap","_context","prev","next","fetch","sent","json","console","log","stop","apply","this","arguments","react_default","createElement","className","src","alt","Activity","props","dataObj","activites","startDate","endDate","keys","length","map","key","id","imageUrl","title","formattedTitle","react_router_dom","to","concat","HomePage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clickHandler","fetchItems","state","location","response","dataSet","setState","items","_x","_x2","_x3","Date","setDate","getDate","sDate","toISOString","substr","eDate","bind","assertThisInitialized","_this2","_this$state","type","defaultValue","onChange","event","target","value","onClick","Activity_Activity","Component","App","react_router","path","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0e36ba7.chunk.js","sourcesContent":["// import React, { Component } from 'react'\n\n// class ActivityDetails extends Component {\n    \n//     constructor(props) {\n//         super(props)\n    \n//         this.state = {\n//              items: {}\n//         }\n//         console.log(this.props);\n//     }\n\n//     componentDidMount() {\n//         this.fetchItem();\n//         console.log(this.props.location.state);\n//     }\n    \n//     fetchItem = async () => {\n//         let response =  await fetch(`https://www.expedia.com/lx/api/activity?activityId=224167&startDate=2019-03-18&endDate=201 9-03-30 `)\n//         const dataSet = await response.json();\n//         this.setState({\n//             items: dataSet\n//         })\n//     }\n//     render() {\n//         console.log(this.state.items);\n//         return (\n//             <div className=\"card card-width\">\n//                 <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\n//                 <div className=\"card-body\">\n//                   <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default ActivityDetails\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useEffect } from 'react';\n\nfunction ActivityDetails({match}) {\n\n    useEffect(() => {\n        fetchItem();\n    } , []);\n\n    const [item, setItem] = useState({});\n\n\n    const fetchItem = async () => {\n        const fetchItem = await fetch(`https://www.expedia.com/lx/api/activity?activityId=224167&startDate=2019-03-18&endDate=2019-03-30`);\n        const item = await fetchItem.json();\n        console.log('item', item);\n    }\n\n\n    // const fetchItem = async () => {\n    //     const fetchItem = await fetch(`https://www.expedia.com/lx/api/activity?activityId=224167&startDate=2019-03-18&endDate=201 9-03-30 `);\n    //     console.log('f',fetchItem);\n    //     const item = await fetchItem.json();\n    //     console.log(\"item\", item);\n    //     setItem(item);\n    // }\n\n    return (\n        <div className=\"card card-width\">\n            <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\n            <div className=\"card-body\">\n              <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ActivityDetails;\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Activity(props) {\n    const {activites: dataObj, startDate, endDate} = props;\n\n    if(Object.keys(dataObj).length === 0) {\n       return(\n           <div>Fetching data....</div>\n       )\n    } else {\n        return(\n            dataObj[\"activities\"].map((item) => {\n                return(\n                    <div className=\"card card-width\" key={item.id} >\n                        <img src={item.imageUrl} className=\"card-img-top\" alt=\"...\"/>\n                         <div className=\"card-body\">\n                          <h5 className=\"card-title\">{item.title}</h5>\n                          <p className=\"card-text\">{item.formattedTitle}</p>\n                          <p className=\"card-text\">Start Date : {startDate}</p>\n                          <p className=\"card-text\">End Date : {endDate}</p>\n                          <Link to={`/activity/${item.id}`}>\n                            More Info\n                          </Link>\n                        </div>\n                     </div>\n                )\n                })\n        )\n    }\n}\n\nexport default Activity\n","import React, { Component } from 'react';\nimport Activity from \"../Activity/Activity\";\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props)\n\n        var startDate = new Date();\n        startDate.setDate(startDate.getDate());\n        var sDate = startDate.toISOString().substr(0,10);\n\n        var endDate = new Date();\n        endDate.setDate(endDate.getDate() + 2);\n        var eDate = endDate.toISOString().substr(0,10);\n    \n        this.state = {\n             location: 'Seattle',\n             startDate: sDate,\n             endDate: eDate,\n             items: {}\n        }\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n\n    clickHandler = () => {\n        this.fetchItems(this.state.location, this.state.startDate, this.state.endDate);\n    }\n\n    componentDidMount() {\n        this.fetchItems(this.state.location, this.state.startDate, this.state.endDate);\n    }\n\n\n  fetchItems = async (location,startDate,endDate) => {\n    let response = await fetch(`https://www.expedia.com/lx/api/search?location=${location}&startDate=${startDate}&endDate=${endDate}`);\n    const dataSet = await response.json();\n    this.setState({\n        items: dataSet\n    })\n  }\n    \n    render() {\n        const {location, startDate, endDate, items} = this.state;\n        return (\n            <div className=\"d-flex flex-column\">\n                <div className=\"search-wrapper\">\n                    <label className=\"space-align\">Location:</label>\n                    <input \n                        className=\"space-align\" \n                        type=\"text\" \n                        defaultValue={location}\n                        onChange={event => this.setState({location: event.target.value})}/>\n                    <label className=\"space-align\">Start Date:</label>\n                    <input \n                        className=\"space-align\" \n                        type=\"date\"\n                        defaultValue={startDate}\n                        onChange={event => this.setState({startDate: event.target.value})}/>\n                    <label className=\"space-align\">End date:</label>\n                    <input \n                        className=\"space-align\" \n                        type=\"date\"\n                        defaultValue={endDate}\n                        onChange={event => this.setState({endDate: event.target.value})}/>\n\n                    <button className=\"space-align\" onClick={this.clickHandler}>Search</button>\n                </div>\n                <div className=\"d-flex flex-wrap\">\n                    <Activity activites={items} startDate={startDate} endDate={endDate} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport ActivityDetails from './Component/Activity/ActivityDetails';\nimport Activity from './Component/Activity/Activity';\n\nimport './App.css';\nimport HomePage from './Component/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage}/>\n          <Route path=\"/activity\" exact component={Activity}/>\n          <Route path=\"/activity:id\" component={ActivityDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}